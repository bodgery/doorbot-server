Next Version
============
* Basic auth no longer handled by the frontend proxy
** Login page
** Session
* Page to change password for the logged in user
* Page to change password for any user
** Forces user to change their password at next login
* HTML frontend
** No JavaScript at all

Future Version
=============
* Access control on users
** User can access any door
** User can access specific tools
** User can access admin functions (add new user, change access level, etc.)
** User can check if an RFID tag can access a location (for invididual doorbot/tool scanners)
* Page for adding/removing access control on user
* Deprecate this endpoint for checking users:
** GET /secure/dump_active_tags
* Now use a location-specific version:
** GET /secure/dump_active_tags/<location>
** The <location> is the same as what's sent in GET /entry/<tag>/<location>
** Dumps all tags that can access the given location; does so in the same format as the existing dump tag endpoint, except with the names of members instead of booleans
* Create users for each individual doorbot and tool scanner
* Log everything
** Who did it
** Who it was targetted at
** Change in password
** Scan at location
** Change in access level
* Entry log paginates using a GraphQL-style cursor
* CSS theming


* MMS -> DB robustness
** If a member exists in both places, but with different RFID keys, 
   the build_active_member_cache.py script will consider the member to not 
   be in the database. The add_members_to_db.py script will then try to add 
   the member, and fail due to duplicate MMS IDs. How to handle?
** Could catch DB error and ignore it
** Could check by MMS ID instead of RFID, and filter it into a list of members 
   with mismatched RFID

* Documentation
** README on developer setup
** Wiki page on broad overview of system
** Code docs
* API
** Gather liabilty form emails
** Mark liability form emails as set
** Alter tag API (not based on existing API)

# Later(tm)
* Tests with Pg should create a whole new database
* Jenkins runs the Pg tests
* Swagger doc
* Open a door API
* Link to MemberPress
* Ping status of doorbots
